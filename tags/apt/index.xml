<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>apt on 不争笔记</title>
    <link>/tags/apt/</link>
    <description>Recent content in apt on 不争笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 Sep 2019 12:00:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/apt/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何在Ubuntu上卸载软件包</title>
      <link>/linux/how-to-uninstall-software-packages-on-ubuntu/</link>
      <pubDate>Wed, 11 Sep 2019 12:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-uninstall-software-packages-on-ubuntu/</guid>
      <description>&lt;p&gt;有时你可能会在你的 Ubuntu 上安装一个应用程序，在尝试之后，你发现这个应用程序不适合你。在这种情况下，您可能希望卸载该软件包。&lt;/p&gt;

&lt;p&gt;在本文中，我们将向您展示如何使用图形界面 “Ubuntu 软件中心”和在命令行使用 &lt;code&gt;apt&lt;/code&gt; 或 &lt;code&gt;apt-get&lt;/code&gt; 命令卸载软件包。&lt;/p&gt;

&lt;p&gt;只有 root 或具有 &lt;a href=&#34;/linux/how-to-add-user-to-sudoers-in-ubuntu/&#34;&gt;&lt;code&gt;sudo&lt;/code&gt; 权限的用户&lt;/a&gt;才能从 Ubuntu 卸载软件包。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 Ubuntu 中添加 apt 仓库</title>
      <link>/linux/how-to-add-apt-repository-in-ubuntu/</link>
      <pubDate>Tue, 27 Aug 2019 12:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-add-apt-repository-in-ubuntu/</guid>
      <description>&lt;p&gt;使用 Ubuntu 软件中心或命令行实用程序安装软件包时， &lt;code&gt;apt&lt;/code&gt; 或者 &lt;code&gt;apt-get&lt;/code&gt; 从一个或多个 apt 软件软件仓库下载软件包。 APT 软件仓库是一个网络服务器或本地目录，包含 deb 软件包和元数据文件，由 APT 工具读取。&lt;/p&gt;

&lt;p&gt;虽然默认的 Ubuntu 软件仓库中有数千个应用程序可用，但有时您可能需要从第三方软件仓库安装软件。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将向您展示在 Ubuntu 和 Debian 系统上添加 apt 软件仓库的两种方法。第一种方法是使用 &lt;code&gt;add-apt-repository&lt;/code&gt; 命令，第二种方法是使用文本编辑器手动添加软件仓库。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 Linux 中使用 apt 命令</title>
      <link>/linux/how-to-use-apt-command/</link>
      <pubDate>Sat, 17 Aug 2019 12:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-use-apt-command/</guid>
      <description>&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; 是一个命令行实用程序，用于在 Ubuntu ， Debian 和相关 Linux 发行版上安装，更新，删除和管理 deb 包。它是 &lt;code&gt;apt-get&lt;/code&gt; 和 &lt;code&gt;apt-cache&lt;/code&gt; 工具的最常用命令和选项的组合。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;apt&lt;/code&gt; 专为交互式使用而设计。在您的 shell 脚本中优先使用 &lt;code&gt;apt-get&lt;/code&gt; 和 &lt;code&gt;apt-cache&lt;/code&gt; ，因为它们在不同版本之间向后兼容，并具有更多选项和功能。&lt;/p&gt;

&lt;p&gt;大多数 &lt;code&gt;apt&lt;/code&gt; 命令必须以具有 &lt;a href=&#34;/linux/sudo-command-in-linux/&#34;&gt;&lt;code&gt;sudo&lt;/code&gt;&lt;/a&gt; 权限的用户身份运行。&lt;/p&gt;

&lt;p&gt;本指南可作为 &lt;code&gt;apt&lt;/code&gt; 命令的快速参考。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Debian上列出已安装的软件包</title>
      <link>/linux/how-to-list-installed-packages-on-debian/</link>
      <pubDate>Thu, 09 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-list-installed-packages-on-debian/</guid>
      <description>&lt;p&gt;在本指南中，我们将解释如何在Debian上列出和过滤已安装的软件包。我们还将向您展示如何检查是否安装了特定软件包，计算已安装的软件包以及查找已安装软件包的版本。&lt;/p&gt;

&lt;p&gt;了解如何在基于Debian的系统上列出已安装的软件包可能会对您需要在另一台计算机上安装相同软件包或者您想重新安装系统的情况有所帮助。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Ubuntu上安装Deb包</title>
      <link>/linux/how-to-install-deb-packages-on-ubuntu/</link>
      <pubDate>Thu, 09 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-install-deb-packages-on-ubuntu/</guid>
      <description>&lt;p&gt;Deb是所有基于Debian的发行版使用的安装包格式。可以使用命令行或图形包管理器安装和卸载Deb软件包。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将解释如何&lt;code&gt;.deb&lt;/code&gt;在Ubuntu 18.04上安装debian 软件包。相同的说明适用于Ubuntu 16.04和任何基于Debian的发行版，包括Debian，Linux Mint和Elementary OS。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 Ubuntu 上列出已安装的软件包</title>
      <link>/linux/how-to-list-installed-packages-on-ubuntu/</link>
      <pubDate>Sun, 31 Mar 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-list-installed-packages-on-ubuntu/</guid>
      <description>&lt;p&gt;在本教程中，我们将向您展示如何在 Ubuntu 上查看和过滤已安装的软件包的列表。了解如何在 Ubuntu 系统上列出已安装的软件包对于需要在另一台计算机上安装相同软件包或者要重新安装系统的情况非常有用。&lt;/p&gt;

&lt;p&gt;我们还将向您展示如何检查是否安装了特定软件包，计算已安装的软件包以及查找已安装软件包的版本。&lt;/p&gt;

&lt;p&gt;虽然本教程是为 Ubuntu 编写的，但相同的说明适用于任何基于 Ubuntu 的发行版，包括 Kubuntu ， Linux Mint 和 Elementary OS 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 Ubuntu 18.04 上启用和设置无人值守自动安全更新</title>
      <link>/linux/how-to-set-up-automatic-updates-on-ubuntu-18-04/</link>
      <pubDate>Sun, 10 Mar 2019 20:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-set-up-automatic-updates-on-ubuntu-18-04/</guid>
      <description>&lt;p&gt;定期更新 Ubuntu 系统是保证系统安全性最重要的方法之一。如果不使用最新的安全修补程序更新操作系统的软件包，则计算机很容易受到攻击。&lt;/p&gt;

&lt;p&gt;如果您手动管理多个 Ubuntu 机器，更新系统软件包可能非常耗时。即使您管理单个 Ubuntu 安装，有时您可能会忽略重要更新。这是无人值守自动更新的便利之处。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将介绍如何在 Ubuntu 18.04 上安装和配置无人值守自动更新。相同的步骤适用于 Ubuntu 16.04 和任何基于 Ubuntu 的发行版，包括 Kubuntu ， Linux Mint 和 Elementary OS 。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>