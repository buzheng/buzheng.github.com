<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ssh on 不争笔记</title>
    <link>/tags/ssh/</link>
    <description>Recent content in ssh on 不争笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 29 May 2019 05:00:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何在 Ubuntu 18.04 上启用 SSH</title>
      <link>/linux/how-to-enable-ssh-on-ubuntu-18-04/</link>
      <pubDate>Wed, 29 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-enable-ssh-on-ubuntu-18-04/</guid>
      <description>&lt;p&gt;Secure Shell(SSH) 是一种加密网络协议，用于客户端和服务器之间的安全连接。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将向您展示如何在 Ubuntu Desktop 计算机上启用 SSH 。启用 SSH 将允许您远程连接到 Ubuntu 计算机并安全地传输文件或执行管理任务。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 Windows 使用 PuTTYgen 上生成 SSH 密钥</title>
      <link>/linux/generate-ssh-keys-on-windows-with-puttygen/</link>
      <pubDate>Sun, 26 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/generate-ssh-keys-on-windows-with-puttygen/</guid>
      <description>&lt;p&gt;Secure Shell(SSH) 是一种加密网络协议，用于客户端和服务器之间的安全连接，并支持各种身份验证机制。&lt;/p&gt;

&lt;p&gt;两种最流行的机制是基于密码的身份验证和基于公钥的身份验证。使用 SSH 密钥比传统的密码验证更安全，更方便。&lt;/p&gt;

&lt;p&gt;本教程介绍如何使用 PuTTYgen 在 Windows 上生成 SSH 密钥。我们还将向您展示如何设置基于 SSH 密钥的身份验证，并在不输入密码的情况下连接到远程 Linux 服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用SSH配置文件</title>
      <link>/linux/using-the-ssh-config-file/</link>
      <pubDate>Thu, 09 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/using-the-ssh-config-file/</guid>
      <description>&lt;p&gt;如果您每天定期通过SSH连接到多个远程系统，您会发现记住所有远程IP地址，不同的用户名，非标准端口和各种命令行选项很困难，如果不是不可能的话。&lt;/p&gt;

&lt;p&gt;一种选择是为每个远程服务器连接&lt;a href=&#34;/linux/how-to-create-bash-aliases/&#34;&gt;创建一个bash别名&lt;/a&gt;。但是，对于这个问题，还有另一种更好，更简单的解决方案。OpenSSH允许您设置每用户配置文件，您可以在其中为连接的每台远程计算机存储不同的SSH选项。&lt;/p&gt;

&lt;p&gt;本指南介绍了SSH客户端配置文件的基础知识，并介绍了一些最常用的配置选项。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何为私有浏览设置SSH SOCKS隧道</title>
      <link>/linux/how-to-setup-ssh-socks-tunnel-for-private-browsing/</link>
      <pubDate>Thu, 09 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-setup-ssh-socks-tunnel-for-private-browsing/</guid>
      <description>&lt;p&gt;有时您希望私下浏览Internet，访问受地理限制的内容或绕过网络可能强制执行的任何中间防火墙。&lt;/p&gt;

&lt;p&gt;一种选择是使用VPN，但这需要在您的计算机上安装客户端软件并&lt;a href=&#34;/linux/how-to-set-up-an-openvpn-server-on-ubuntu-18-04/&#34;&gt;设置您自己的VPN服务器&lt;/a&gt;或订阅VPN服务。&lt;/p&gt;

&lt;p&gt;更简单的替代方法是使用加密的SOCKS代理隧道路由本地网络流量。这样，使用代理的所有应用程序都将连接到SSH服务器，服务器会将所有流量转发到其实际目标。您的ISP（互联网服务提供商）和其他第三方将无法检查您的流量并阻止您访问网站。&lt;/p&gt;

&lt;p&gt;本教程将引导您完成创建加密SSH隧道和配置Firefox和&lt;a href=&#34;/linux/how-to-install-google-chrome-web-browser-on-ubuntu-18-04/&#34;&gt;Google Chrome&lt;/a&gt; Web浏览器以使用SOCKS代理的过程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在Debian 9上设置SSH密钥</title>
      <link>/linux/how-to-set-up-ssh-keys-on-debian-9/</link>
      <pubDate>Thu, 09 May 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-set-up-ssh-keys-on-debian-9/</guid>
      <description>&lt;p&gt;Secure Shell（SSH）是一种加密网络协议，用于客户端和服务器之间的安全连接，并支持各种身份验证机制。&lt;/p&gt;

&lt;p&gt;两种最流行的机制是基于密码的身份验证和基于公钥的身份验证。使用SSH密钥比传统的密码验证更安全，更方便。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将介绍如何在Debian 9系统上生成SSH密钥。我们还将向您展示如何设置基于SSH密钥的身份验证，并在不输入密码的情况下连接到远程Linux服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何设置 SFTP Chroot Jail</title>
      <link>/linux/how-to-set-up-sftp-chroot-jail/</link>
      <pubDate>Tue, 09 Apr 2019 07:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-set-up-sftp-chroot-jail/</guid>
      <description>&lt;p&gt;如果您是管理 Linux 服务器的系统管理员，则可能需要向某些用户授予 SFTP 访问权限才能将文件上载到其主目录。默认情况下，通过 SSH ， SFTP 和 &lt;!--link:how-to-use-scp-command-to-securely-transfer-files--&gt;SCP&lt;!--link--&gt; 登录系统的用户可以浏览整个文件系统，包括其他用户的目录。如果这些用户受信任，这可能不是问题，但如果您不希望登录用户在系统中随意浏览，则需要限制用户访问其主目录。这增加了额外的安全层来保护您的系统，尤其是在具有多个用户的系统上。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将解释如何设置 SFTP Chroot Jail 环境，该环境将用户限制在其主目录中。用户只能访问 SFTP ， SSH 访问将被禁用。这些说明适用于任何现代 Linux 发行版，包括 Ubuntu ， CentOS ， Debian 和 Fedora 。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何设置 SSH 免密登录</title>
      <link>/linux/how-to-setup-passwordless-ssh-login/</link>
      <pubDate>Fri, 22 Mar 2019 05:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-setup-passwordless-ssh-login/</guid>
      <description>&lt;p&gt;Secure Shell （ SSH ）是一种加密网络协议，用于客户端和服务器之间的安全连接，并支持各种身份验证机制。基于密码的身份验证和基于公钥的身份验证是目前两种最流行的身份验证机制。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将向您展示如何设置基于 SSH 密钥的身份验证以及如何在不输入密码的情况下连接到 Linux 服务器。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 Linux 中更改 SSH 端口</title>
      <link>/linux/how-to-change-ssh-port-in-linux/</link>
      <pubDate>Mon, 18 Mar 2019 06:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-change-ssh-port-in-linux/</guid>
      <description>&lt;p&gt;默认情况下， SSH 侦听端口 &lt;code&gt;22&lt;/code&gt; 。 更改默认 SSH 端口可以降低被自动攻击的风险，从而为服务器增加额外的安全层。&lt;/p&gt;

&lt;p&gt;和更改默认端口相比，将防火墙配置为仅允许从特定主机访问端口 &lt;code&gt;22&lt;/code&gt; 则更加简单和安全。&lt;/p&gt;

&lt;p&gt;本教程介绍如何更改 Linux 中的默认 SSH 端口。我们还将向您展示如何配置防火墙以允许访问新的 SSH 端口。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>