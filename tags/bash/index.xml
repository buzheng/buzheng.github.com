<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on 不争笔记</title>
    <link>/tags/bash/</link>
    <description>Recent content in Bash on 不争笔记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 06 May 2019 06:00:00 +0800</lastBuildDate>
    
	<atom:link href="/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何在 Bash 中比较字符串</title>
      <link>/linux/how-to-compare-strings-in-bash/</link>
      <pubDate>Mon, 06 May 2019 06:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-compare-strings-in-bash/</guid>
      <description>&lt;p&gt;在编写 Bash 脚本时，您通常需要比较两个字符串以检查它们是否相等。当两个字符串具有相同的长度并且包含相同的字符序列时，它们是相等的。&lt;/p&gt;

&lt;p&gt;本教程描述了如何比较 Bash 中的字符串。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何在 Linux 中复制文件和目录</title>
      <link>/linux/how-to-copy-files-and-directories-in-linux/</link>
      <pubDate>Mon, 06 May 2019 06:00:00 +0800</pubDate>
      
      <guid>/linux/how-to-copy-files-and-directories-in-linux/</guid>
      <description>&lt;p&gt;复制文件和目录是命令行上最常用的操作之一。在 Linux 中，有几个用于复制文件的命令，其中 cp 和 rsync 是最受欢迎的。&lt;/p&gt;

&lt;p&gt;复制文件时使用 cp 命令和复制目录时使用 rsync 命令是一种常见做法。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux cd 命令</title>
      <link>/linux/linux-cd-command/</link>
      <pubDate>Fri, 26 Apr 2019 06:00:00 +0800</pubDate>
      
      <guid>/linux/linux-cd-command/</guid>
      <description>&lt;p&gt;在 Linux 的命令行上工作时， cd 命令是最基本和最常用的命令之一。 cd 命令代表“更改目录”，用于更改 Linux 和其他类 Unix 操作系统中的当前工作目录。当前工作目录是用户当前工作的目录。每次与命令提示符交互时，您都在目录中工作。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将向您展示如何使用 cd 命令导航计算机的目录树。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>创建自签名的 SSL 证书</title>
      <link>/linux/creating-a-self-signed-ssl-certificate/</link>
      <pubDate>Fri, 19 Apr 2019 08:00:00 +0800</pubDate>
      
      <guid>/linux/creating-a-self-signed-ssl-certificate/</guid>
      <description>&lt;p&gt;本文介绍如何使用 openssl 工具创建自签名的 SSL 证书。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Linux 中的 Echo 命令用法与示例</title>
      <link>/linux/echo-command-in-linux-with-examples/</link>
      <pubDate>Thu, 18 Apr 2019 07:00:00 +0800</pubDate>
      
      <guid>/linux/echo-command-in-linux-with-examples/</guid>
      <description>&lt;p&gt;echo 命令是 Linux 中最基本和最常用的命令之一。它接收字符串参数，并把他们传递给标准输出并在标准输出上打印出来。&lt;/p&gt;

&lt;p&gt;echo 通常用于 shell 脚本中以显示消息或输出其他命令的结果。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>使用 pwd 命令在 Linux 中确定当前的工作目录</title>
      <link>/linux/current-working-directory/</link>
      <pubDate>Wed, 17 Apr 2019 07:00:00 +0800</pubDate>
      
      <guid>/linux/current-working-directory/</guid>
      <description>&lt;p&gt;在本教程中，我们将向您展示如何使用 pwd 命令确定当前的工作目录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>在 Bash 中拼接字符串</title>
      <link>/linux/bash-concatenate-strings/</link>
      <pubDate>Sun, 24 Mar 2019 08:00:00 +0800</pubDate>
      
      <guid>/linux/bash-concatenate-strings/</guid>
      <description>&lt;p&gt;字符串拼接最常用的字符串操作之一。字符串拼接只是一个特殊的的编程方法，用于通过将一个字符串附加到另一个字符串的末尾来将字符串拼接在一起。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将解释如何在 Bash 中拼接字符串。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash 中如何检查文件或目录是否存在</title>
      <link>/linux/bash-check-if-file-exists/</link>
      <pubDate>Wed, 13 Mar 2019 12:00:00 +0800</pubDate>
      
      <guid>/linux/bash-check-if-file-exists/</guid>
      <description>&lt;p&gt;当您在编写 Shell 脚本时，您很多时候可能会发现自己需要根据文件是否存在来执行某些操作。&lt;/p&gt;

&lt;p&gt;在 Bash 中，您可以使用 &lt;code&gt;test&lt;/code&gt; 命令检查文件是否存在并确定文件的类型。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;test&lt;/code&gt; 命令采用以下语法形式之一：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;test EXPRESSION
[ EXPRESSION ]
[[ EXPRESSION ]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果您希望脚本可移植，则应该使用 &lt;code&gt;test&lt;/code&gt; 命令的旧语法形式 &lt;code&gt;[&lt;/code&gt;，因为这种形式在所有 POSIX shell 上都可用的。&lt;code&gt;test&lt;/code&gt; 命令的新语法版本 &lt;code&gt;[[&lt;/code&gt; (双括号) 被大多数使用 Bash ， Zsh 和 Ksh 作为默认 shell 的现代系统支持。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash 中 until loop 用法</title>
      <link>/linux/bash-until-loop/</link>
      <pubDate>Mon, 04 Mar 2019 08:00:00 +0800</pubDate>
      
      <guid>/linux/bash-until-loop/</guid>
      <description>&lt;p&gt;循环是编程语言的基本概念之一。当您想要反复运行一系列命令直到满足特定条件时，循环很方便。&lt;/p&gt;

&lt;p&gt;在诸如 Bash 之类的脚本语言中，循环对于自动执行重复性任务非常有用。在 Bash 脚本中有3个基本的循环结构，用于 for loop, while loop 和 until loop 。&lt;/p&gt;

&lt;p&gt;本教程解释了 Bash 中的 until loop 的基础知识。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash 中 Case 语句用法</title>
      <link>/linux/bash-case-statement/</link>
      <pubDate>Sat, 02 Mar 2019 09:00:00 +0800</pubDate>
      
      <guid>/linux/bash-case-statement/</guid>
      <description>&lt;p&gt;在 Bash 中，当您有多个不同的选择时， case 语句通常用于简化复杂的条件。 使用 case 语句而不是嵌套的 if 语句将帮助您使 bash 脚本更易读，更易于维护。&lt;/p&gt;

&lt;p&gt;Bash 中的 case 语句与 Javascript 或 C 中的 switch 语句具有类似的概念。与 C 中的 switch 语句不同主要在于， Bash 中的 case 语句一旦找到一个并执行与该模式关联的语句，就不会继续搜索模式匹配。&lt;/p&gt;

&lt;p&gt;在本教程中，我们将介绍 Bash 案例语句的基础知识，并向您展示如何在 shell 脚本中使用它们。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Bash Shell 的常用快捷键</title>
      <link>/post/20170805-bash-shell-shortcut-keys/</link>
      <pubDate>Sat, 05 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/20170805-bash-shell-shortcut-keys/</guid>
      <description>&lt;p&gt;对于 Bash 的快捷键一直了解很少，除了常用的 &lt;code&gt;CTRL + a&lt;/code&gt;, &lt;code&gt;CTRL + e&lt;/code&gt; 和 &lt;code&gt;CTRL + l&lt;/code&gt;，其他的基本上都未使用过，这里记录一下（Mac 下请使用 ESC 代替 ALT）。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>